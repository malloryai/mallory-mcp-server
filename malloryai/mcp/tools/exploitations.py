from typing import Any, Dict

from ..decorator.api import handle_api_errors
from ..server.server import mcp, malloryai_client


@mcp.tool()
@handle_api_errors
async def get_exploitation(
    identifier: str,
) -> Dict[str, Any]:
    """Get a specific exploitation

    Args:
        identifier (str): The unique UUID of the exploitation to retrieve.
            Example format: "123e4567-e89b-12d3-a456-426614174000"

    Returns:
        Dict[str, Any]: Dictionary containing detailed exploitation data.
    """
    return await malloryai_client.exploitations.get_exploitation(identifier=identifier)


@mcp.tool()
@handle_api_errors
async def list_exploitations(
    offset: int = 0,
    limit: int = 10,
    sort: str = "created_at",
    order: str = "desc",
) -> Dict[str, Any]:
    """Get exploitation data

    Args:
        offset (int, optional): The number of items to skip before starting to collect the result set.
            Defaults to 0.
        limit (int, optional): The maximum number of items to return. Minimum value is 1.
            Defaults to 10 (API default is 100).
        sort (str, optional): Field to sort by - either 'count', 'created_at', or 'updated_at'.
            Defaults to 'created_at'.
        order (str, optional): Sort order - either 'asc' or 'desc'.
            Defaults to 'desc'.

    Returns:
        Dict[str, Any]: Dictionary containing exploitation data and metadata.
    """
    return await malloryai_client.exploitations.list_exploitations(
        offset=offset, limit=limit, sort=sort, order=order
    )
